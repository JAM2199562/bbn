alias syncinfo="curl -s localhost:26657/status | jq .result | jq .sync_info"
alias sinfo="curl -s localhost:26657/status | jq .result | jq .sync_info"
alias status=$'curl -sS http://127.0.0.1:26657/net_info | jq -r \'.result.peers[] | "\(.node_info.id)@\(.remote_ip):\(.node_info.listen_addr)"\' | awk -F \':\' \'{print $1":"$(NF)}\''
alias peer=$'curl -sS http://127.0.0.1:26657/net_info | jq -r \'.result.peers[] | "\(.node_info.id)@\(.remote_ip):\(.node_info.listen_addr)"\' | awk -F \':\' \'{print $1":"$(NF)}\''
alias qbs='babylond q staking validator $(babylond keys show wallet --bech val -a)'
alias kl="babylond keys list"
alias bbs="systemctl start babylond"
alias bbss="systemctl stop babylond"
alias bbr="systemctl restart babylond"
qb() {
    # 检查是否提供了参数
    if [ -z "$1" ]; then
        echo "请提供一个地址作为参数"
        return 1
    fi

    # 调用 babylond 工具查询余额，并尝试提取金额值
    result=$(babylond query bank balances "$1" | grep -oP 'amount: "\K[0-9]+(?=")')

    # 检查是否获取到金额
    if [ -z "$result" ]; then
        echo "未能提取地址 $1 的余额"
        return 1
    fi

    # 转换余额到所需的格式并保留两位小数
    formatted_amount=$(echo "scale=2; $result / 1000000" | bc)

    # 输出转换后的余额
    echo "地址 $1 的余额为：${formatted_amount} BBN"
}
